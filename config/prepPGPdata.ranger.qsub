#!/bin/bash

### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
#
#   Copyright J. Craig Venter Institute 2012
#   See docs.PGP/COPYING file distributed along with the proteogenomics 
#   package for the copyright and license terms.
#
### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##

#set -ex

echo "Ready to run $PGP_HOME/PGPMakeflow.py in serial batch mode ..."

#set serial batch mode with options
##$ -A  # <project_account_name>. Used only for multi-project logins. Account names and reports are displayed at login.
#$ -V # Inherit the submission environment
#$ -cwd # Start job in submission directory
#$ -j y # Combine stderr and stdout
#$ -o $JOB_NAME.o$JOB_ID # Name of the output file (eg. myMPI.oJobID)
#$ -pe 1way 16 # 1 execution on node of 16 cores
#$ -q serial # run in serial queue
#$ -l h_rt=01:30:00 # Run time (hh:mm:ss) -1.5 hours
set -ex # Echo commands, exit on error
[ -n "$PGP_ROOT" ] || exit 1
config_dir=$PGP_ROOT/proteogenomics/config
DB=  #user needs to provide path to the nucleotide/protein (input) directory
OUT= #user needs to provide path to the output (work) directory
# execute PGPMakeflow.py
python $PGP_HOME/PGPMakeflow.py --config-file=$config_dir/pgp_makeflow.ini --inp-dir=$DB --work-dir=$OUT

#Instructions for step 3 in the pipeline
echo
if [ $? -eq 0 ]; then
        echo "PGP makeflow FINISHED successfully. Run Step3 next ..."
        echo
        echo "Step 3: Run PGP pipeline: runPGP.$ENVIRONMENT.qsub ..."   
        echo
        echo "REQUIRED steps for running 'runPGP.$ENVIRONMENT.qsub':" 
        echo
        echo "1. source $config_dir/pgp_makeflow_env_master.sh .. "
        echo
        echo "2. modify MANDATORY SGE options as necessary, particularly, -A, -pe  & -l h_rt in $config_dir/runPGP.$ENVIRONMENT.qsub script .." 
        echo
        echo "3. cd to '$OUT/$(basename $DB)' and run $config_dir/runPGP.$ENVIRONMENT.qsub" 
        echo
else
        echo "PGPMakeflow.py finihed with error! Rerun it after making the corrections."
fi
echo
